# OAuth 2.0 Token Introspection configuration
resolver 8.8.8.8;                         # For DNS lookup of OAuth server
subrequest_output_buffer_size 64k;        # To fit a complete response from OAuth server

location = /_oauth2_token_introspection {
    # This location implements an auth_request server that uses the JavaScript
    # module to perform the token introspection request.
    internal;
    js_content oauth2.authenticate;
}

location = /_oauth2_send_login_request {
    internal;
    gunzip on; # Decompress if necessary

    proxy_set_header      Content-Type "application/json";
    proxy_set_header      Accept "application/json";
    proxy_set_header      User-Agent "nginx";
    proxy_method          POST;
    # See https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#2-users-are-redirected-back-to-your-site-by-github
#     proxy_pass            "https://github.com/login/oauth/access_token/$is_args$args";
#     proxy_pass            "https://files.specifysoftware.org/some/path?client_id=$oauth_client_id&client_secret=$oauth_client_secret&code=$arg_code";
    proxy_pass            "https://github.com/login/oauth/access_token?client_id=$oauth_client_id&client_secret=$oauth_client_secret&code=$arg_code";
}

location = /_oauth2_send_organization_info_request {
    internal;
    gunzip on; # Decompress if necessary

    proxy_set_header      Content-Type "application/json";
    proxy_set_header      Accept "application/json";
    proxy_set_header      Authorization "bearer $arg_token";
    proxy_set_header      User-Agent "nginx";
    proxy_method          POST;
    proxy_cache           ouath2;         # Enable caching of token introspection responses
    proxy_cache_key       $arg_token;     # Cache the response for each unique access token
    proxy_cache_lock      on;             # Don't allow simultaneous requests for same token
    proxy_cache_valid     200 1h;         # How long to use cached introspection responses
    proxy_cache_use_stale error timeout;  # Use old responses if we cannot reach the server
    proxy_ignore_headers  Cache-Control Expires Set-Cookie; # Cache even when receiving these
    proxy_pass            "https://api.github.com/graphql";
}

location @autherror {
  # If the user is not logged in, redirect them to GitHub's login URL
  # See https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#1-request-a-users-github-identity
  return 302 "https://github.com/login/oauth/authorize?client_id=$oauth_client_id&scope=$github_scopes";
}